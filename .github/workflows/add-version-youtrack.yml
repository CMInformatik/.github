name: YouTrack "GelÃ¶st in Version" setzen

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "release" branch
  push:
    branches: 
      - 'release/**'
    inputs:
      youtrack_field_name:
        description: 'Field-Name, welche im Youtrack aktualisiert werden soll'
        default: 'Fix versions'
        required: false
        type: string
      youtrack_field_id:
        description: 'Field-ID im Projekt CMI, welche im Youtrack aktualisiert werden soll'
        default: '70-303'
        required: false
        type: string

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_call:
    secrets:
      YOUTRACK_AUTH_TOKEN:
        required: true
    inputs:
      youtrack_field_name:
        description: 'Field-Name, welche im Youtrack aktualisiert werden soll'
        default: 'Fix versions'
        required: false
        type: string
      youtrack_field_id:
        description: 'Field-ID im Projekt CMI, welche im Youtrack aktualisiert werden soll'
        default: '70-303'
        required: false
        type: string

jobs:
 setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.matrix.outputs.result}}
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/release/v.})"
      id: extract_branch
    - name: Get Tickets
      id: matrix
      uses: actions/github-script@v6
      with:
        script: |
          const commits = ${{ toJSON(github.event.commits) }};
          
          var includes = [];
          for (const commit of commits) {
            var arr = commit.message.match(/[A-Za-z]{2,5}\d{0,5}-\d{1,5}/gi);
            if (arr != null) {
              includes.push({message: arr[0]});
            }
          }
          
          return { include: includes };
    - name: Create Version
      continue-on-error: true
      env:
          YOUTRACK_AUTH_TOKEN: ${{ secrets.YOUTRACK_AUTH_TOKEN }}
      uses: fjogeleit/http-request-action@v1
      with: 
        customHeaders: '{"Authorization": "${{ env.YOUTRACK_AUTH_TOKEN }}"}'
        data: '{ "name": "${{ steps.extract_branch.outputs.branch }}", "$type": "VersionBundleElement" }'
        method: POST
        url: "https://cmiag.myjetbrains.com/api/admin/projects/69-28/customFields/${{ inputs.youtrack_field_id }}/bundle/values?fields=id,name"
          
 updater:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - name: "get current values in youtrack"
        id: getcurrent
        env:
          YOUTRACK_AUTH_TOKEN: ${{ secrets.YOUTRACK_AUTH_TOKEN }}
        uses: fjogeleit/http-request-action@v1
        with: 
          customHeaders: '{"Authorization": "${{ env.YOUTRACK_AUTH_TOKEN }}"}'
          method: GET
          url: "https://cmiag.myjetbrains.com/youtrack/api/issues/${{ matrix.message }}/customFields?fields=name,value(name)"
      - name: Build Post-Data
        id: builddata
        uses: actions/github-script@v6
        with:
          script: |
            const input = ${{ toJSON(steps.getcurrent.outputs.response) }};
            const obj = JSON.parse(input);
            
            var value = [];
            
            obj.filter(elm => elm.name == ${{ inputs.youtrack_field_name }})[0].value.forEach(elm => value.push({"name": elm.name}));
            value.push({"name": "${{ needs.setup.outputs.branch }}"});

            return {"customFields":[{"name":"${{ inputs.youtrack_field_name }}","$type":"MultiVersionIssueCustomField","value": value}]}
      - name: "set fix version in youtrack"
        env:
          YOUTRACK_AUTH_TOKEN: ${{ secrets.YOUTRACK_AUTH_TOKEN }}
        uses: fjogeleit/http-request-action@v1
        with: 
          customHeaders: '{"Authorization": "${{ env.YOUTRACK_AUTH_TOKEN }}", "Content-Type": "application/json", "Accept": "application/json"}'
          data: ${{ steps.builddata.outputs.result }}
          method: POST
          url: "https://cmiag.myjetbrains.com/youtrack/api/issues/${{ matrix.message }}?fields=customFields(name,value(name,text))"
